#include "csce310hw04pt02.h"
#include <vector>
#include <iostream>
#include <math.h>

using namespace std;

int collectWithLoss( vector< vector<int> > grid ){

	int rows = grid.size();
	int columns= grid[0].size();

	vector<vector<int>> total(rows,vector<int>(columns,0));	//optimal path matrix

	if(grid[0][0] == -1){
		total[0][0] = 0;
	}else{
		total[0][0] = grid[0][0];
	}
	//sum entire first row
	for(int j=1; j<columns; j++){
		if(grid[0][j] ==-1)total[0][j] = 0;
		else{
			total[0][j] = total[0][j-1] + grid[0][j];
		}
	}
/*
 * starting at first index of each row += whatevers above it
 * at each row += this index with whichever upper or left entry is greatest
 */
	for(int i =1; i<rows; i++){
		if(grid[i][0] == -1)total[i][0] = 0;
		else{
			total[i][0]= total[i-1][0] + grid[i][0];
		}
		for(int j=1; j<columns; j++){
			if(grid[i][j]==-1){
				total[i][j] =0;
			}else{
				total[i][j] = max(total[i-1][j],total[i][j-1]) + grid[i][j]; //check if grid[i][j] == -1
			}
		}
	}

  return total[rows-1][columns-1];
}
